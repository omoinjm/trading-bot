name: Build, Push Docker Image and Deploy Telegram Python bot to AWS

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE: omoi/trading-bot:latest
  
  AWS_DIR: ~/docker/apps/trading-bot
  AWS_SERVER: ${{ secrets.AWS_SERVER }}
  AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
  
  PYTHON_ENV: ${{ secrets.PYTHON_ENV }}
  API_ENDPOINT: ${{ secrets.API_ENDPOINT }}
  TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build Docker Image
      run: |
        docker build \
        --build-arg PYTHON_ENV=${{ env.PYTHON_ENV }} \
        --build-arg API_ENDPOINT=${{ env.API_ENDPOINT }} \
        --build-arg TELEGRAM_TOKEN=${{ env.TELEGRAM_TOKEN }} \
        -t ${{ env.DOCKER_IMAGE }} .

    - name: Push Docker Image
      run: docker push ${{ env.DOCKER_IMAGE }}
          
    # - name: Deploy to AWS server
    #   run: |
    #     echo "${{ env.AWS_SSH_KEY }}" > key.pem
    #     chmod 400 key.pem
    #     scp -P 615 -i key.pem docker-compose.yml omoi@${{ env.AWS_SERVER }}:${{ env.AWS_DIR }}
    #     ssh -i key.pem -p 615 -o StrictHostKeyChecking=no omoi@${{ env.AWS_SERVER }} 'cd ${{ env.AWS_DIR }} && docker-compose down && docker-compose pull && docker-compose up -d'

